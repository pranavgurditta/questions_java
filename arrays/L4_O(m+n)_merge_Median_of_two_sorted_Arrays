/*There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5
*/

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        int[] nums3=new int[nums1.length+nums2.length];
        int j=0;
        int k=0;
        int i=0;
        for(i=0;i<nums1.length+nums2.length;)
        {
            if((j)==nums1.length  ||  (k)==nums2.length)
                break; 
            if(nums2[k]>nums1[j])
                nums3[i++] = nums1[j++];
            else
                nums3[i++] = nums2[k++];
            
                     
        }
        if((j)!=nums1.length)
            while((j)!=nums1.length)
                nums3[i++]=nums1[j++];
        
        if((k)!=nums2.length)
            while((k)!=nums2.length)
                nums3[i++]=nums2[k++];
            
    
        
        
        if(i%2!=0)
            return nums3[(i)/2];
        else
            return (nums3[(i-1)/2]+nums3[(i+1)/2])/2f;
        
        
    }
}
