/*https://leetcode.com/problems/find-pivot-index/
O(N^2)

class Solution {
    public int pivotIndex(int[] nums) {
        
        
        for(int i=0;i<nums.length;i++)
            if(sum(nums,0,i-1)==sum(nums,i+1,nums.length-1))
                return i;
        return -1;
        
    }
    int sum(int[] arr,int start, int end)
    {
        int sum_range=0;
        for(int k=start;k<=end;k++)
            sum_range+=arr[k];
        return sum_range;
    }
    
}
*/
/*O(N) */
class Solution {
    public int pivotIndex(int[] nums) {
        
        int sum=0;
        for(int i:nums)
            sum+=i;
        int prefix_sum=0;
        for(int i=0;i<nums.length;i++)
        {
         
            if(prefix_sum == (sum-nums[i]-prefix_sum))
                return i;
            prefix_sum+=nums[i];
            
        }
        return -1;
        
    }
}
