/*652. Find Duplicate Subtrees
Medium

1083

186

Add to List

Share
Given a binary tree, return all duplicate subtrees. For each kind of duplicate subtrees, you only need to return the root node of any one of them.

Two trees are duplicate if they have the same structure with same node values.

Example 1:

        1
       / \
      2   3
     /   / \
    4   2   4
       /
      4
The following are two duplicate subtrees:

      2
     /
    4
and

    4
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    private List<TreeNode> answer =new ArrayList<TreeNode>();
    private HashMap<String,Integer> map=new HashMap<>();
    
    public List<TreeNode> findDuplicateSubtrees(TreeNode root) {
        
        collect(root);
        return answer;
    }
    
    
    public String collect(TreeNode node)
    {
        if(node==null)
            return "#";
        
        String serial= node.val+","+collect(node.left)+","+collect(node.right);
        map.put(serial, map.getOrDefault(serial,0) + 1);
        if(map.get(serial)==2) 
            answer.add(node);
        return serial;
    }
}
