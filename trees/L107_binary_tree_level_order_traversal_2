/**

107. Binary Tree Level Order Traversal II
Easy

1097

202

Add to List

Share
Given a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its bottom-up level order traversal as:
[
  [15,7],
  [9,20],
  [3]
]

 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        
        List<List<Integer>> mainList=new ArrayList<List<Integer>>();
        if(root==null)
            return mainList;
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        queue.offer(root);
    
        while(!queue.isEmpty())
        {
            List<Integer> sublist=new ArrayList<Integer>();
            int levelNum=queue.size();
            for(int i=0;i<levelNum;i++)
            {
                TreeNode temp=queue.poll();
                if(temp.left!=null)
                    queue.offer(temp.left);
                if(temp.right!=null)
                    queue.offer(temp.right); 
                sublist.add(temp.val);
            }
            mainList.add(0,sublist);
        }
        return mainList;
    }
}
