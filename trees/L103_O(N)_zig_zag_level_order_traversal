/**

103. Binary Tree Zigzag Level Order Traversal
Medium

1748

89

Add to List

Share
Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
       
        List<List<Integer>> main_list=new ArrayList<List<Integer>>();
         if(root==null)
            return main_list;
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        queue.offer(root);
        boolean flag=false;
        while(!queue.isEmpty())
        {
            int levelSize=queue.size();
            List<Integer> subList=new ArrayList<Integer>(levelSize);
            
            for(int i=0;i<levelSize;i++) subList.add(0);
            for(int i=0;i<levelSize;i++)
            {
                
                TreeNode temp=queue.poll();
                
                if(flag==true)
                    subList.set(levelSize-i-1,temp.val);
                else
                    subList.set(i,temp.val);
                
                if(temp.left!=null)
                    queue.offer(temp.left);
                if(temp.right!=null)
                    queue.offer(temp.right);
               
         
            }
            main_list.add(subList);
            flag=!flag;
            
        }
        return main_list;
    }
}
