/* https://leetcode.com/problems/all-elements-in-two-binary-search-trees/ */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> mainList;
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {
        
        mainList=new ArrayList<Integer>();
        inorder(root1);
        inorder(root2);
        Collections.sort(mainList);
        return mainList;
        
    }
    void inorder(TreeNode node)
    {
        if(node==null)
            return;
        inorder(node.left);
        mainList.add(node.val);
        inorder(node.right);
    }
}
