/*111. Minimum Depth of Binary Tree
Easy

1126

612

Add to List

Share
Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its minimum depth = 2
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
    
        if(root==null)
            return 0;
        
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        queue.offer(root);
        
        int min_count=0;
        
        while(!queue.isEmpty())
        {
            min_count++;
            int levelN=queue.size();
            
            for(int i=0;i<levelN;i++)
            {
                TreeNode temp=queue.poll();
                if(temp.left==null && temp.right==null)
                    return min_count;
                if(temp.left!=null)
                    queue.offer(temp.left);
                
                if(temp.right!=null)
                    queue.offer(temp.right);
                
            }
        }
        return min_count;
    }
}
