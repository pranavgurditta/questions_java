/*102. Binary Tree Level Order Traversal
Medium

2391

63

Add to List

Share
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        List<List<Integer>> main_list=new ArrayList<List<Integer>>();
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        
        if(root==null)
            return main_list;
        
        queue.offer(root);
        
        while(!(queue.isEmpty()))
        {
            
            List<Integer> sublist=new ArrayList<Integer>();
            int levelNum=queue.size();
            TreeNode current=queue.peek();
            
            for(int i=0;i<levelNum;i++)
            {
                current=queue.peek();
                if(current.left!=null)
                    queue.offer(current.left);
                if(current.right!=null)
                    queue.offer(current.right);

                sublist.add(queue.poll().val);
            }
            main_list.add(sublist);
        }
        return main_list;
    }
}
