/*
100. Same Tree
Easy

1730

52

Add to List

Share
Given two binary trees, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical and the nodes have the same value.

Example 1:

Input:     1         1
          / \       / \
         2   3     2   3

        [1,2,3],   [1,2,3]

Output: true
Example 2:

Input:     1         1
          /           \
         2             2

        [1,2],     [1,null,2]

Output: false
Example 3:

Input:     1         1
          / \       / \
         2   1     1   2

        [1,2,1],   [1,1,2]

Output: false

*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
         if (p == null && q == null) return true;
        if (!check(p, q)) return false;
        ArrayDeque<TreeNode> firstTree=new ArrayDeque<TreeNode>();       
        ArrayDeque<TreeNode> secondTree=new ArrayDeque<TreeNode>();
        firstTree.addLast(p);
        secondTree.addLast(q);
        
        while(!firstTree.isEmpty())
        {
            p=firstTree.removeFirst();
            q=secondTree.removeFirst();
            if(!check(p,q))
                return false;
            if(p!=null)
            {
                
                if(!check(p.left,q.left))
                    return false;
                
                if(p.left!=null)
                {
                    firstTree.addLast(p.left);
                    secondTree.addLast(q.left);                    
                }
                
                if(!check(p.right,q.right))
                    return false;
                if(p.right!=null)
                {
                    firstTree.addLast(p.right);
                    secondTree.addLast(q.right);                    
                }
            
            }
        }
        return true;
        }
        
    
    public boolean check(TreeNode p,TreeNode q)
    {
        if(p==null && q==null)
            return true;
        if(p==null || q==null)
            return false;
        if(p.val!=q.val)
            return false;
        return (true);
    }
}
