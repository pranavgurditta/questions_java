/*
1302. Deepest Leaves Sum
Medium

290

21

Add to List

Share
Given a binary tree, return the sum of values of its deepest leaves.
 

Example 1:



Input: root = [1,2,3,4,5,null,6,7,null,null,null,null,8]
Output: 15
 

Constraints:

The number of nodes in the tree is between 1 and 10^4.
The value of nodes is between 1 and 100.

*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int deepestLeavesSum(TreeNode root) {
        if(root==null)
            return 0;
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        queue.offer(root);
        int sum=0;
        while(!queue.isEmpty())
        {
            sum=0;
            
            int levelNum=queue.size();
            for(int i=0;i<levelNum;i++)
            {
                
                TreeNode temp=queue.poll();
                if(temp.left==null && temp.right==null)
                    sum+=temp.val;
                if(temp.left!=null)
                    queue.offer(temp.left);
                
                if(temp.right!=null)
                    queue.offer(temp.right);   
            }
        }
        return sum;
    }
}
