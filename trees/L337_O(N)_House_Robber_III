/**

337. House Robber III
Medium

2411

49

Add to List

Share
The thief has found himself a new place for his thievery again. There is only one entrance to this area, called the "root." Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that "all houses in this place forms a binary tree". It will automatically contact the police if two directly-linked houses were broken into on the same night.

Determine the maximum amount of money the thief can rob tonight without alerting the police.

Example 1:

Input: [3,2,3,null,3,null,1]

     3
    / \
   2   3
    \   \ 
     3   1

Output: 7 
Explanation: Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.
Example 2:

Input: [3,4,5,1,3,null,1]

     3
    / \
   4   5
  / \   \ 
 1   3   1

Output: 9
Explanation: Maximum amount of money the thief can rob = 4 + 5 = 9.


 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int rob(TreeNode root) {
        return robR(root,new HashMap<TreeNode,Integer>());
        
    }
    public int robR(TreeNode root, HashMap<TreeNode,Integer> map)    
    {
        if(root==null)
            return 0;
        
        if(map.containsKey(root))
            return map.get(root);
        
        int val=0;
        if(root.left!=null)
            val+=robR(root.left.left,map)+robR(root.left.right,map);
        
        if(root.right!=null)
            val+=robR(root.right.left,map)+robR(root.right.right,map);
        
        val=Math.max(val+root.val,robR(root.left,map)+robR(root.right,map));
        map.put(root,val);
        
        return val;
    }
}  
