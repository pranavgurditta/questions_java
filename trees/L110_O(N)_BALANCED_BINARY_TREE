/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(depth(root)==-1)
            return false;
        return true;
    }
    
    private int depth(TreeNode node)
    {
        if(node==null)
            return 0;
        int left=depth(node.left);
        int right=depth(node.right);
        if(left==-1 || right==-1)
            return -1;
        int depthOfNode= Math.abs(left-right)>1 ? -1: 1+Math.max(left,right);
        return depthOfNode;
        
    }
}
