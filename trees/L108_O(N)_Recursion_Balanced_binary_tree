/* 
110. Balanced Binary Tree
Easy

1860

149

Add to List

Share
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as:

a binary tree in which the left and right subtrees of every node differ in height by no more than 1.

 

Example 1:

Given the following tree [3,9,20,null,null,15,7]:

    3
   / \
  9  20
    /  \
   15   7
Return true.

Example 2:

Given the following tree [1,2,2,3,3,null,null,4,4]:

       1
      / \
     2   2
    / \
   3   3
  / \
 4   4
Return false.

*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(depth(root)==-1)
            return false;
        return true;
    }
    public int depth(TreeNode root)
    {
        if(root==null)
            return 0;
        int left=depth(root.left);
        if(left==-1)
            return -1;
        int right=depth(root.right);
        if(right==-1)
            return -1;
        int depthOfNode=Math.abs(left-right);
        if (depthOfNode>1)
            return -1;
        System.out.println(root.val+" "+ (1+Math.max(left,right)));
        return 1+Math.max(left,right);
    }
}
