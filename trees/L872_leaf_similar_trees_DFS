/**
872. Leaf-Similar Trees
Easy

601

31

Add to List

Share
Consider all the leaves of a binary tree.  From left to right order, the values of those leaves form a leaf value sequence.



For example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).

Two binary trees are considered leaf-similar if their leaf value sequence is the same.

Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.

 

Constraints:

Both of the given trees will have between 1 and 200 nodes.
Both of the given trees will have values between 0 and 200

 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        List<Integer> leaf_tree_1=preOrder(root1);
        List<Integer> leaf_tree_2=preOrder(root2);
        if(leaf_tree_1.size()!=leaf_tree_2.size())
            return false;
        for(int i=0;i< leaf_tree_1.size();i++ )
            if(leaf_tree_1.get(i)!=leaf_tree_2.get(i))
                return false;
        return true;
    }
    public List<Integer> preOrder(TreeNode root)
    {
        List<Integer> res=new ArrayList<Integer>();
        Stack<TreeNode> stack=new Stack<TreeNode>();
        stack.push(root);
        while(!stack.isEmpty())
        {
            TreeNode temp=stack.pop();
            if(temp.left==null  && temp.right==null)
                res.add(temp.val);
            if(temp.right!=null)
                stack.push(temp.right);
            if(temp.left!=null)
                stack.push(temp.left);          
        }
        return res;
    }
}
