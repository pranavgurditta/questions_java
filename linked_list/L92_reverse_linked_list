/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(head==null || head.next==null)
            return head;
        
        ListNode con=null;
        ListNode tail=null;
        ListNode prev=null;
        ListNode current=head;
        
        for(int k=1;k<m;k++){
            
            prev=current;
            current=current.next;
           
        }
         con=prev;
            tail=current;
        
        
        for(int k=m;k<=n;k++){
        ListNode temp=current.next; 
        current.next=prev;
        prev=current;
        current=temp;
        }
        
        
        if(con!=null){
            con.next=prev;
            }
        else{
            head=prev;
            }
        tail.next=current;
        
        
        return head;
    }
}
