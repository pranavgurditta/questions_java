/*
Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

Example:

Input:
[
  1->4->5,
  1->3->4,
  2->6
]
Output: 1->1->2->3->4->4->5->6

*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
     
        ArrayList<Integer> nodes=new ArrayList<Integer>();
        for(ListNode list:lists)
            while(list!=null)
            {
                nodes.add(list.val);
                list=list.next;
            }
        Collections.sort(nodes);
        
        ListNode head=null;
        ListNode current=null;
        for(int i:nodes)
        {
            if(current==null)
            {
            current=new ListNode(i);
            head=current;
            }
            
            else
            {
            current.next=new ListNode(i);
            current=current.next;
            }
        
        }
        return head;
    }              
}
