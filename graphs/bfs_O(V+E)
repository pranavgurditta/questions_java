class Traversal {
    static ArrayList<Integer> bfs(ArrayList<ArrayList<Integer>> g, int N) {
        /* add your code here
        for(ArrayList<Integer> a:g)
            for(int f:a)
                System.out.println("o"+f);
                */
        ArrayList<Integer> answer=new ArrayList<Integer>();
        Queue<Integer> queue= new LinkedList<Integer>();
        boolean visited[]= new boolean[N];
        for(int i=0;i<visited.length;i++)
            visited[i]=false;
        int s=0;
        queue.offer(s);
        visited[s]=true;
        while(!queue.isEmpty())
        {
            s=queue.poll();
             
            answer.add(s);
            for(int j:g.get(s))
            {/*
                System.out.println("h"+j);
            */
                if(visited[j]==false)
                {
                   
                 visited[j]=true;
                    queue.offer(j);
                }
            }
        }
        return answer;
    }
}
