class DetectCycle
{
    static boolean isCyclic(ArrayList<ArrayList<Integer>> g, int V)
    {
        
        boolean[] visited=new boolean[V];
        for(int i=0;i<V;i++)
            visited[i]=false;
        for(int i=0;i<V;i++)
          if(!visited[i])
                if(dfs(-1,i,g,visited))
                    return true;
        return false;

               // add your code here
    }
    
    static boolean dfs(int parent,int i,ArrayList<ArrayList<Integer>> g,boolean[] visited)
    {

        visited[i]=true;
        for(int j:g.get(i)){
           
        if(j!=parent)
            if(visited[j])
                return true;
        
        else {if(dfs(i,j,g,visited))
                return true;
        }
        }
        return false;
    }
    
}
