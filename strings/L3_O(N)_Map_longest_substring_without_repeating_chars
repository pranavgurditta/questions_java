/*3. Longest Substring Without Repeating Characters
Medium

9223

558

Add to List

Share
Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:
Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
             */
public class Solution {
    public int lengthOfLongestSubstring(String s) {
        int size=s.length();
        Map<Character,Integer> map =new HashMap<>();
        int answer=0;
        int left=0;
        int right=0;
        for(;right<size;)
        {
            if(map.containsKey(s.charAt(right)))
            {
                left=Math.max(left,map.get(s.charAt(right))); /* move left to directly find the repeating                                                                   character */
            }
            map.put(s.charAt(right),right+1); /* right+1 so that left goes directly to value we want */
            right++;
            answer=Math.max(answer,right-left);
            
        }
        return answer;
    }
}
