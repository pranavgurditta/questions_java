/* 

Based on activity selection problem
https://leetcode.com/problems/non-overlapping-intervals/


Important link for greedy algorithm :https://medium.com/algorithms-and-leetcode/greedy-algorithm-explained-using-leetcode-problems-80d6fee071c4
*/

class Interval implements Comparable<Interval>
{
    int start;
    int end;
    @Override
    public int compareTo(Interval obj)
    {
    return this.end-obj.end;
    }
}
class Solution {
    public int eraseOverlapIntervals(int[][] intervals) {
        if(intervals.length==0)
            return 0;
        int finish=0;
        ArrayList<Interval> interval=new ArrayList<>();
        for(int i=0;i<intervals.length;i++)
        {
        Interval obj=new Interval();
        obj.start=intervals[i][0];
        obj.end=intervals[i][1];
        interval.add(obj);
        }
        Collections.sort(interval);
        int count=1;
        finish=interval.get(0).end;
        for(int i=1;i<interval.size();i++)
        {
        
        Interval o=interval.get(i);
            if(o.start >= finish)
            {
                finish=o.end;
                count++;
            }
            
         }
        return interval.size()-count;
     }
}
