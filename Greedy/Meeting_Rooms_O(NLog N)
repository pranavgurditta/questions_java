
/* https://www.interviewbit.com/problems/meeting-rooms/ */

public class Solution {
    public int solve(int[][] intervals) {


        if(intervals.length==0)
            return 0;
        int finish=0;
        ArrayList<Integer> arrival=new ArrayList<>();
        ArrayList<Integer> departure=new ArrayList<>();
        for(int i=0;i<intervals.length;i++)
        {
        arrival.add(intervals[i][0]);
        departure.add(intervals[i][1]);
        }
        Collections.sort(arrival);
        Collections.sort(departure);
        int count=0;
        int i=0;
        int ans=0;
        int j=0;
        while(i<arrival.size() && j<departure.size())
        {
        
        if(arrival.get(i)<departure.get(j))
        {
            count++;
            i++;
         }
         else
        {
            count--;
            j++;
        }
        ans=Math.max(ans,count);
     }
     return ans;
    }
}
